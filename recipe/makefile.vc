#
# makefile.vc - MSVC++ makefile for the C#/GDAL extension
#
# This VC++ makefile will build the GDAL C# interface assemblies
#
# To use the makefile:
#  - Open a DOS prompt window
#  - Run the VCVARS32.BAT script to initialize the VC++ environment variables
#  - Start the build with:  nmake /f makefile.vc
#
# $Id$
#

GDAL_ROOT	=	..\..

!INCLUDE $(GDAL_ROOT)\nmake.opt

!INCLUDE csharp.opt

GDAL_VERSION= \
!INCLUDE $(GDAL_ROOT)\VERSION

!IFDEF CSHARP_STATIC_LINKAGE
GDALLIB	= $(GDAL_ROOT)\$(GDAL_LIB_NAME)
!ELSE
# This is changed to point to the Conda distributable
GDALLIB	= $(LIBRARY_LIB)\$(GDAL_LIB_NAME)
!ENDIF

!IFNDEF NETSTANDARD
NETSTANDARD = netstandard2.0
!ENDIF

!IFNDEF NETCORE
NETCORE = net5
!ENDIF

!IFNDEF DOTNET_RID
DOTNET_RID = win-x64
!ENDIF

!IF "$(DEBUG)" == "1"
CSDEBUG = /debug:full
DOTNET_CONFIG = Debug
!ELSE
CSDEBUG =
DOTNET_CONFIG = Release
!ENDIF

OBJ	=	gdal_wrap.obj gdalconst_wrap.obj ogr_wrap.obj osr_wrap.obj

.SUFFIXES: .cs

all: ogr_dir gdal_dir osr_dir const_dir gdal_csharp samples

template.csproj:
!IFDEF NETSTANDARD
    echo ^<Project Sdk="Microsoft.NET.Sdk"^> > $@
    echo ^<PropertyGroup^> >> $@
    echo ^<TargetFramework^>$(NETSTANDARD)^</TargetFramework^> >> $@
    echo ^<AssemblyVersion^>$(GDAL_VERSION).0^</AssemblyVersion^> >> $@
    echo ^<AssemblyOriginatorKeyFile^>..\gdal.snk^</AssemblyOriginatorKeyFile^> >> $@
    echo ^<SignAssembly^>true^</SignAssembly^> >> $@
	echo ^<AllowUnsafeBlocks^>true^</AllowUnsafeBlocks^> >> $@
    echo ^</PropertyGroup^> >> $@
    echo ^</Project^> >> $@
!ELSE
    echo > $@
!ENDIF

{apps}.cs{apps}.exe:
!IFDEF NETCORE
    cd apps
    echo ^<Project Sdk="Microsoft.NET.Sdk"^> > %|fF.csproj
    echo ^<PropertyGroup^> >>  %|fF.csproj
    echo ^<OutputType^>Exe^</OutputType^> >>  %|fF.csproj
    echo ^<TargetFramework^>$(NETCORE)^</TargetFramework^> >>  %|fF.csproj
    echo ^<AssemblyVersion^>$(GDAL_VERSION).0^</AssemblyVersion^> >>  %|fF.csproj
    echo ^<EnableDefaultCompileItems^>false^</EnableDefaultCompileItems^>  >>  %|fF.csproj
    echo ^</PropertyGroup^> >>  %|fF.csproj
    echo ^<ItemGroup^> >>  %|fF.csproj
    echo ^<Compile Include="%|fF.cs" /^> >>  %|fF.csproj
    echo ^</ItemGroup^> >>  %|fF.csproj
    echo ^</Project^> >>  %|fF.csproj
    dotnet publish -c $(DOTNET_CONFIG) --output . -r $(DOTNET_RID) %|fF.csproj --self-contained false
    cd ..
!ELSE
    msc $(CSDEBUG) /r:ogr_csharp.dll /r:osr_csharp.dll /r:gdal_csharp.dll /r:System.Drawing.dll /out:%|fF.exe apps\%|fF.cs
!ENDIF

gdal_csharp: template.csproj
!IFDEF NETSTANDARD
    cd const
    copy ..\template.csproj gdalconst_csharp.csproj
    dotnet build -c $(DOTNET_CONFIG) -o "." -r $(DOTNET_RID)
    cd ..
    cd osr
    copy ..\template.csproj osr_csharp.csproj
    dotnet build -c $(DOTNET_CONFIG) -o "." -r $(DOTNET_RID)
    cd ..
    cd ogr
    copy ..\template.csproj ogr_csharp.csproj
    dotnet add reference ..\osr\osr_csharp.csproj
    dotnet build -c $(DOTNET_CONFIG) -o "." -r $(DOTNET_RID)
    cd ..
    cd gdal
    copy ..\template.csproj gdal_csharp.csproj
    dotnet add reference ..\osr\osr_csharp.csproj ..\ogr\ogr_csharp.csproj
    dotnet build -c $(DOTNET_CONFIG) -o "." -r $(DOTNET_RID)
    cd ..
!ELSE
    msc $(CSDEBUG) /unsafe /target:library /out:osr_csharp.dll osr\*.cs AssemblyInfo.cs
    msc $(CSDEBUG) /unsafe /target:library /out:ogr_csharp.dll /r:osr_csharp.dll ogr\*.cs AssemblyInfo.cs
    msc $(CSDEBUG) /unsafe /target:library /out:gdal_csharp.dll /r:ogr_csharp.dll /r:osr_csharp.dll gdal\*.cs AssemblyInfo.cs
    msc $(CSDEBUG) /unsafe /target:library /out:gdalconst_csharp.dll const\*.cs AssemblyInfo.cs
!ENDIF
    link /dll $(OGR_INCLUDE) $(BASE_INCLUDE) ogr_wrap.obj \
		$(EXTERNAL_LIBS) $(GDALLIB)\
		 /out:ogr_wrap.dll $(LINKER_FLAGS)
	if exist ogr_wrap.dll.manifest mt -manifest ogr_wrap.dll.manifest -outputresource:ogr_wrap.dll;2
    link /dll $(OGR_INCLUDE) $(BASE_INCLUDE) gdal_wrap.obj \
		$(EXTERNAL_LIBS) $(GDALLIB)\
		 /out:gdal_wrap.dll $(LINKER_FLAGS)
	if exist gdal_wrap.dll.manifest mt -manifest gdal_wrap.dll.manifest -outputresource:gdal_wrap.dll;2
    link /dll $(OGR_INCLUDE) $(BASE_INCLUDE) gdalconst_wrap.obj \
		$(EXTERNAL_LIBS) $(GDALLIB)\
		 /out:gdalconst_wrap.dll $(LINKER_FLAGS)
	if exist gdalconst_wrap.dll.manifest mt -manifest gdalconst_wrap.dll.manifest -outputresource:gdalconst_wrap.dll;2
    link /dll $(OGR_INCLUDE) $(BASE_INCLUDE) osr_wrap.obj \
		$(EXTERNAL_LIBS) $(GDALLIB)\
		 /out:osr_wrap.dll $(LINKER_FLAGS)
	if exist osr_wrap.dll.manifest mt -manifest osr_wrap.dll.manifest -outputresource:osr_wrap.dll;2

sign:
    sn -k gdal.snk

ogr_dir:
	cd ogr
	$(MAKE) /f makefile.vc
	cd ..

gdal_dir:
	cd gdal
	$(MAKE) /f makefile.vc
	cd ..

const_dir:
	cd const
	$(MAKE) /f makefile.vc
	cd ..

osr_dir:
	cd osr
	$(MAKE) /f makefile.vc
	cd ..

interface:
	cd const
    $(SWIG) -DSWIG2_CSHARP -csharp -namespace OSGeo.GDAL -dllimport gdalconst_wrap -o gdalconst_wrap.c ../../include/gdalconst.i
	cd ..
	cd gdal
	$(SWIG) -DSWIG2_CSHARP -c++ -csharp -namespace OSGeo.GDAL  -dllimport gdal_wrap -I../../include/csharp -o gdal_wrap.cpp ../../include/gdal.i
	cd ..
	cd osr
	$(SWIG) -DSWIG2_CSHARP -c++ -csharp -namespace OSGeo.OSR  -dllimport osr_wrap -I../../include/csharp -o osr_wrap.cpp ../../include/osr.i
	cd ..
	cd ogr
	$(SWIG) -DSWIG2_CSHARP -c++ -csharp -namespace OSGeo.OGR -dllimport ogr_wrap -I../../include/csharp -o ogr_wrap.cpp ../../include/ogr.i
	cd ..


samples: apps/ogrinfo.exe apps/createdata.exe apps/OSRTransform.exe apps/GDALRead.exe apps/GDALReadDirect.exe apps/GDALAdjustContrast.exe apps/GDALDatasetRasterIO.exe apps/GDALDatasetRasterIOEx.exe apps/GDALWrite.exe apps/GDALDatasetWrite.exe apps/GDALColorTable.exe apps/WKT2WKB.exe apps/OGRGEOS.exe apps/ReadXML.exe apps/GDALInfo.exe apps/GDALOverviews.exe apps/GDALCreateCopy.exe apps/GDALGetHistogram.exe apps/VSIMem.exe apps/GDALMemDataset.exe apps/OGRLayerAlg.exe apps/OGRFeatureEdit.exe apps/GDALWarp.exe apps/GetCRSInfo.exe apps/gdal_test.exe
    copy apps\bin\x64\Release\net5\win-x64\*.* .\apps

test:
!IFDEF MONO
	mono apps\createdata.exe Data pointlayer
    mono appp\ogrinfo.exe Data/pointlayer.shp
    mono apps\OSRTransform.exe
    mono apps\GDALWrite.exe Data/sample.tif
    mono apps\GDALDatasetWrite.exe Data/sample1.tif
	mono apps\GDALCreateCopy.exe Data/sample.tif Data/sample2.tif
	mono apps\GDALOverviews.exe Data/sample.tif NEAREST 2 4
	mono apps\GDALInfo.exe Data/sample.tif
	mono apps\GDALInfo.exe ../../../autotest/gcore/data/byte.tif
!ELSE
    apps\createdata.exe Data pointlayer
    apps\ogrinfo.exe Data/pointlayer.shp
	apps\OSRTransform.exe
	apps\GDALWrite.exe Data/sample.tif
	apps\GDALDatasetWrite.exe Data/sample1.tif
	apps\GDALCreateCopy.exe Data/sample.tif Data/sample2.tif
    apps\GDALReadDirect.exe Data/sample.tif Data/sample.png
	apps\GDALOverviews.exe Data/sample.tif NEAREST 2 4
	apps\GDALInfo.exe Data/sample.tif
	apps\ogrlayeralg.exe Intersection Data/pointlayer.shp pointlayer Data/pointlayer.shp pointlayer Data intersectionresult
	apps\ogrinfo.exe Data/intersectionresult.shp
	apps\getcrsinfo.exe "EPSG" 20
!ENDIF

clean:
	cd gdal
	$(MAKE) /f makefile.vc clean
	cd ..
	cd ogr
	$(MAKE) /f makefile.vc clean
	cd ..
	cd const
	$(MAKE) /f makefile.vc clean
	cd ..
	cd osr
	$(MAKE) /f makefile.vc clean
	cd ..
	-del $(GDAL_LIB_NAME)
	-del *.obj
	-del *.exp
	-del *.ilk
	-del *.pdb
	-del *.tlb
	-del *.lib
	-del *.mdb
	-del *.exe
	-del *.manifest
    -del *.json
	-rd /q /s Data
    -del apps\*.csproj
    -del *.dll
    -del *.pdb
    -del *.exe
    -del *.json
    -rd /q /s apps\obj
    -del template.csproj
    -del SOS_README.md

install:
    -mkdir $(GDAL_HOME)\csharp
	xcopy /Y /R /F *_wrap.dll $(GDAL_HOME)\csharp
	xcopy /Y /R /F *_csharp.dll $(GDAL_HOME)\csharp

